<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ucp.report.service.RprtsumyearMapper">

    <select id="selectDurationYear" parameterType="java.util.HashMap" resultType="egovMap">
    /* selectDurationYear */
        select FROM_YMD
             , TO_CHAR(TO_DATE(FROM_YMD,'YYYYMMDD'),'YYYY-MM-DD')
               || ' ~ ' ||
               TO_CHAR(TO_DATE(END_YMD,'YYYYMMDD'),'YYYY-MM-DD') DURATION
          from TB_ACCTYEAR ta
         where ta.STAN_YY = #{stanYy}
    </select>

    <select id="selectNextMonth" parameterType="java.util.HashMap" resultType="egovMap">
    /* selectNextMonth */
        select TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{stanYmd},'YYYYMMDD'),'MM'),1),'YYYYMMDD') STAN_YMD
          from DUAL 
    </select>



    <select id="selectMoneyMonth" parameterType="java.util.HashMap" resultType="egovMap">
    /* selectMoneyMonth */
    <include refid="kr.co.ucp.cmm.service.CmmMapper.pagingHeader"/>
        select M.ACCT_GB             , AG.ACCT_GB_NAME
             , MM.MONEY_CODE         , M.MONEY_NAME
             , nvl(sum(MM.MONEY_AMT),0) MONEY_AMT
          from TB_MAST_MONEY MM
     left join TB_MONEY   M  ON M.MONEY_CODE = MM.MONEY_CODE
     left join TB_ACCT_GB AG ON AG.ACCT_GB   = M.ACCT_GB
         where MM.STAN_YMD BETWEEN TO_CHAR(TRUNC(TO_DATE(#{stanYmd},'YYYYMMDD'),'MM'),'YYYYMMDD')
                               and TO_CHAR(LAST_DAY(TO_DATE(#{stanYmd},'YYYYMMDD')),'YYYYMMDD')
           <if test="acctGb != null and acctGb != '' "> and M.ACCT_GB = #{acctGb} </if>
      group by MM.MONEY_CODE , M.MONEY_NAME   , M.ACCT_GB     , AG.ACCT_GB_NAME
      <!-- order by M.ACCT_GB, MM.MONEY_CODE -->
      order by ${sidx} ${sord}
    <include refid="kr.co.ucp.cmm.service.CmmMapper.pagingBottom"/>
    </select>

    <select id="selectMoneyYear" parameterType="java.util.HashMap" resultType="egovMap">
    /* selectMoneyYear */
    <include refid="kr.co.ucp.cmm.service.CmmMapper.pagingHeader"/>
        select M.ACCT_GB             , AG.ACCT_GB_NAME
             , MM.MONEY_CODE         , M.MONEY_NAME
             , nvl(sum(MM.MONEY_AMT),0) MONEY_AMT
          from TB_MAST_MONEY MM
     left join TB_MONEY   M  ON M.MONEY_CODE = MM.MONEY_CODE
     left join TB_ACCT_GB AG ON AG.ACCT_GB   = M.ACCT_GB
         where MM.STAN_YMD BETWEEN ( select AY.FROM_YMD from TB_ACCTYEAR AY
                                      where AY.STAN_YY = #{stanYy}
                                   )
                               and ( select AY.END_YMD from TB_ACCTYEAR AY
                                      where AY.STAN_YY = #{stanYy}
                                   )
           <if test="acctGb != null and acctGb != '' "> and M.ACCT_GB = #{acctGb} </if>
      group by MM.MONEY_CODE , M.MONEY_NAME   , M.ACCT_GB     , AG.ACCT_GB_NAME
      <!-- order by M.ACCT_GB, MM.MONEY_CODE -->
      order by ${sidx} ${sord}
    <include refid="kr.co.ucp.cmm.service.CmmMapper.pagingBottom"/>
    </select>



    <select id="selectMonthAmnt" parameterType="java.util.HashMap" resultType="String">
    /* selectMonthAmnt */
        select nvl(sum(MM.MONEY_AMT),0) MONEY_AMT
          from TB_MAST_MONEY MM
     left join TB_MONEY   M  ON M.MONEY_CODE = MM.MONEY_CODE
     left join TB_ACCT_GB AG ON AG.ACCT_GB   = M.ACCT_GB
         where MM.STAN_YMD BETWEEN TO_CHAR(TRUNC(TO_DATE(#{stanYmd},'YYYYMMDD'),'MM'),'YYYYMMDD')
                               and TO_CHAR(LAST_DAY(TO_DATE(#{stanYmd},'YYYYMMDD')),'YYYYMMDD')
           <if test="acctGb != null and acctGb != '' "> and M.ACCT_GB = #{acctGb} </if>
    </select>

    <select id="selectTotalAmnt" parameterType="java.util.HashMap" resultType="String">
    /* selectTotalAmnt */
        select nvl(sum(MM.MONEY_AMT),0) MONEY_AMT
          from TB_MAST_MONEY MM
     left join TB_MONEY   M  ON M.MONEY_CODE = MM.MONEY_CODE
     left join TB_ACCT_GB AG ON AG.ACCT_GB   = M.ACCT_GB
         where 1=1
           and MM.STAN_YMD BETWEEN ( select AY.FROM_YMD from TB_ACCTYEAR AY
                                      where STAN_YY = TO_CHAR(TRUNC(TO_DATE(#{stanYmd},'YYYYMMDD'),'YY'),'YYYY')
                                   )
                               and TO_CHAR(LAST_DAY(TO_DATE(#{stanYmd},'YYYYMMDD')),'YYYYMMDD')
           <if test="acctGb != null and acctGb != '' "> and M.ACCT_GB = #{acctGb} </if>
    </select>



    <insert id="insertMoney" parameterType="java.util.HashMap">
    /* insertMoney */
        insert into TB_MEMBER
             ( MEMBER_ID       , MEMBER_NO       , MEMBER_NAME
             , SEX_TYPE        , TEL_NO          , HPHONE_NO 
             , POSITION_CODE   , DEPT_CODE       , REGION_CODE
             , ADDR            , FAMILY_REMARK   , USE_YN        , REG_TIME )
        values
             ( #{memberId}     , #{memberNo}     , #{memberName}  
             , #{sexType}      , #{telNo}        , #{hphoneNo}  
             , #{positionCode} , #{deptCode}     , #{regionCode}
             , #{addr}         , #{familyRemark} , #{useYn}      , SYSDATE  )
    </insert>
    
    <update id="updateMoney" parameterType="java.util.HashMap">
    /* updateMoney */
        update TB_MEMBER
           set MEMBER_ID     = #{memberId}
             , MEMBER_NO     = #{memberNo}
             , MEMBER_NAME   = #{memberName}
             , SEX_TYPE      = #{sexType}
             , TEL_NO        = #{telNo}
             , HPHONE_NO     = #{hphoneNo}
             , POSITION_CODE = #{positionCode}
             , DEPT_CODE     = #{deptCode}
             , REGION_CODE   = #{regionCode}
             , ADDR          = #{addr}
             , FAMILY_REMARK = #{familyRemark}
             , USE_YN        = #{useYn}
         where MEMBER_ID = #{memberId}
    </update>

    <delete id="deleteMoney" parameterType="java.util.HashMap">
    /* deleteMoney */
        delete from TB_MEMBER
         where MEMBER_ID = #{memberId}
           and MEMBER_NO = #{memberNo}
    </delete>
    
</mapper>
