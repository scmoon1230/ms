<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.ucp.wrks.sstm.menu.service.MenuInfoMapper">

    <select id="fnctList" parameterType="java.util.HashMap" resultType="egovMap">
    /* fnctList */
        select CD_GRP_ID
             , CD_ID
             , CD_NM_KO
          from CM_TC_CODE
         where CD_GRP_ID = #{CD_GRP_ID}
           and CD_TY = #{CD_TY}
           and USE_TY_CD = 'Y'
         order by CD_NM_KO asc
    </select>

    <select id="list" parameterType="java.util.HashMap" resultType="egovMap">
        <![CDATA[
    select  P5.PGM_ID
            , P5.PGM_NM
            , CONCAT(P5.PGM_NM,'_',P5.PGM_ID) as PGM_TIT
            , P5.PRNT_PGM_ID
            , P5.PGM_FNCT_TY_CD         , P5.PGM_URL            , P5.PGM_DSCRT            , P5.USE_TY_CD
            , P5.RGS_USER_ID            , P5.RGS_DATE           , P5.UPD_USER_ID          , P5.UPD_DATE
            , P5.LVL::text as LVL 
            , (CASE WHEN ( select COUNT(*) from CM_PROGRAM where P5.PGM_ID = PRNT_PGM_ID) > 0 THEN 'false'
                    ELSE 'true' END
              ) as ISLF
            , 'true' as EXPD
      from  (   select P1.*
                    , P2.USE_TY_CD
                from (  WITH RECURSIVE P (PGM_ID, PGM_NM, PRNT_PGM_ID, PGM_FNCT_TY_CD, PGM_URL, PGM_DSCRT, RGS_USER_ID, RGS_DATE, UPD_USER_ID, UPD_DATE, LVL, RK) AS
                        (
	                        select PGM_ID, PGM_NM, PRNT_PGM_ID, PGM_FNCT_TY_CD, PGM_URL, PGM_DSCRT
	                             , RGS_USER_ID, TO_CHAR(RGS_DATE, 'YYYY-MM-DD') as RGS_DATE
	                             , UPD_USER_ID, TO_CHAR(UPD_DATE, 'YYYY-MM-DD') as UPD_DATE
	                             , 1 LVL, PGM_ID RK 
	                        from CM_PROGRAM
	                        where 1 = 1
	                        and PGM_ID = '500000000'
	                        union all
	                        select c.PGM_ID, c.PGM_NM, c.PRNT_PGM_ID, c.PGM_FNCT_TY_CD, c.PGM_URL, c.PGM_DSCRT
	                             , c.RGS_USER_ID, TO_CHAR(c.RGS_DATE, 'YYYY-MM-DD') as RGS_DATE
	                             , c.UPD_USER_ID, TO_CHAR(c.UPD_DATE, 'YYYY-MM-DD') as UPD_DATE
	                             , p.LVL + 1 as LVL, c.PGM_ID RK
	                        from CM_PROGRAM c, P p
	                        where 1 = 1 
	                        and p.PGM_ID = c.PRNT_PGM_ID
                        )
                        select * from P
                    ) P1
                    , CM_PROGRAM P2
                where P1.PGM_ID = P2.PGM_ID
                    ]]>
                        <if test="PGM_NM    != null and PGM_NM    != '' "> and P1.PGM_NM LIKE CONCAT('%', #{PGM_NM}, '%')       </if>
                        <if test="PGM_URL   != null and PGM_URL   != '' "> and P1.PGM_URL LIKE CONCAT('%', #{PGM_URL}, '%')     </if>
                        <if test="PGM_DSCRT != null and PGM_DSCRT != '' "> and P1.PGM_DSCRT LIKE CONCAT('%', #{PGM_DSCRT}, '%') </if>
                        <if test="USE_TY_CD != null and USE_TY_CD != '' "> and USE_TY_CD = #{USE_TY_CD}                         </if>
                    <![CDATA[                    
            ) P5
            , ( select A.PGM_ID from CM_PROGRAM A group by A.PGM_ID
              ) B
        where P5.PGM_ID    = B.PGM_ID
        order by P5.RK
        ]]>
    </select>


    <insert id="insert" parameterType="java.util.HashMap">
    /* insert */
        insert into CM_PROGRAM
            ( PGM_ID            , PGM_FNCT_TY_CD      , PGM_URL            , PGM_NM
            , PGM_DSCRT         , PRNT_PGM_ID         , USE_TY_CD
            , RGS_USER_ID       , RGS_DATE            , UPD_USER_ID        , UPD_DATE     )
       values
            ( #{PGM_ID}         , #{PGM_FNCT_TY_CD}   , #{PGM_URL}         , #{PGM_NM}
            , #{PGM_DSCRT}      , #{PRNT_PGM_ID}      , #{USE_TY_CD}
            , #{RGS_USER_ID}    , NOW()               , #{RGS_USER_ID}     , NOW()        )
    </insert>


    <update id="update" parameterType="java.util.HashMap">
    /* update */
        update CM_PROGRAM
           set PGM_FNCT_TY_CD = #{PGM_FNCT_TY_CD}
             , PGM_URL = #{PGM_URL}
             , PGM_NM = #{PGM_NM}
             , PGM_DSCRT = #{PGM_DSCRT}
             , PRNT_PGM_ID = #{PRNT_PGM_ID}
             , USE_TY_CD = #{USE_TY_CD}
             , UPD_USER_ID = #{UPD_USER_ID}
             , UPD_DATE = NOW()
         where PGM_ID = #{pgmIdBk}
    </update>


    <delete id="delete" parameterType="java.util.HashMap">
    /* delete */
        delete from CM_PROGRAM
         where PGM_ID IN ( select PGM_ID1
                             from ( select DISTINCT A.PGM_ID as PGM_ID1
                                      from CM_PROGRAM A
                                         , ( select B.PGM_ID, B.PRNT_PGM_ID
                                               from CM_PROGRAM B
                                              where B.PRNT_PGM_ID = #{PGM_ID}
                                                 or B.PGM_ID = #{PGM_ID}
                                           ) C
                                    where A.PRNT_PGM_ID = C.PGM_ID
                                       or A.PGM_ID = C.PGM_ID
                                  ) D
                         )
    </delete>


</mapper>


