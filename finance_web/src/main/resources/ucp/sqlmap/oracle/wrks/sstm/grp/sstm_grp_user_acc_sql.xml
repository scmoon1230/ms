<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.ucp.wrks.sstm.grp.service.GrpUserAccMapper">

    <!-- 그룹권한레벨 -->
    <select id="getCM_GRP_AUTH_LVL" parameterType="java.util.HashMap" resultType="egovMap">
    /* getCM_GRP_AUTH_LVL */
        select AUTH_LVL    AS CD_ID
             , AUTH_LVL_NM AS CD_NM_KO
          from CM_GRP_AUTH_LVL
         where GRP_ID = #{GRP_ID}
         order by AUTH_LVL_NM
    </select>

    <!-- 지구명 -->
    <select id="getCM_DSTRT_CD_MNG" parameterType="java.util.HashMap" resultType="egovMap">
    /* getCM_DSTRT_CD_MNG */
        select DSTRT_CD, DSTRT_NM
          from CM_DSTRT_CD_MNG
         where USE_TY_CD = 'Y'
         order by DSTRT_NM
    </select>

    <!-- 그룹명 -->
    <select id="getCM_GROUP" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /* getCM_GROUP */
        select *
          from ( select A.GRP_ID     , A.GRP_NM_KO
                      , B.DSTRT_CD   , B.DSTRT_NM
                   from CM_GROUP A, CM_DSTRT_CD_MNG B
                  where A.DSTRT_CD = B.DSTRT_CD
                    and A.USE_TY_CD = 'Y'
                    <if test="DSTRT_CD != null and DSTRT_CD != '' "> and B.DSTRT_CD = #{DSTRT_CD}                     </if>
                    <if test="GRP_NM   != null and GRP_NM   != '' "> and A.GRP_NM_KO LIKE CONCAT('%', #{GRP_NM}, '%') </if>
               ) T
      order by ${sidx} ${sord}
    </select>

    <!-- 이벤트 -->
    <select id="getCM_GRP_EVT" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /* getCM_GRP_EVT */
        select *
          from ( select C.GRP_ID            , A.EVT_ID
                      , A.EVT_NM            , B.SYS_NM_KO
                      , D.CD_NM_KO as USVC_GRP_NM
                   from CM_EVENT A, CM_SYS_CODE B, CM_GRP_EVT C
                      , ( select CD_ID, CD_NM_KO 
                            from CM_TC_CODE 
                           where CD_GRP_ID = 'USVC_GRP' 
                             and CD_TY = 'C'
                        ) D
                  where A.SYS_CD = B.SYS_CD
                    and A.EVT_ID = C.EVT_ID
                    and A.USVC_GRP_CD = D.CD_ID
                    and C.GRP_ID = #{GRP_ID} 
                    and C.USE_TY_CD = 'Y'
               )
      order by ${sidx} ${sord}
    </select>
    
    <select id="getCM_EVENT" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
            select
                 A.EVT_ID
                , A.EVT_NM
                , B.SYS_NM_KO
                , D.CD_NM_KO as USVC_GRP_NM
            from CM_EVENT A, CM_SYS_CODE B
            ,(
                select CD_ID, CD_NM_KO 
                from CM_TC_CODE 
                where CD_GRP_ID = 'USVC_GRP' 
                    and CD_TY = 'C'
            ) D
            where A.SYS_CD = B.SYS_CD
                and A.USE_TY_CD = 'Y'
                and A.USVC_GRP_CD = D.CD_ID
                and A.EVT_ID NOT IN ( select EVT_ID from CM_GRP_EVT where GRP_ID = #{GRP_ID} and USE_TY_CD = 'Y')
        ]]>
    </select>
    
    <insert id="insert_event" parameterType="java.util.HashMap">
        <![CDATA[
            insert into CM_GRP_EVT
            (
                  GRP_ID
                , EVT_ID
                , USE_TY_CD
                , UPD_USER_ID
                , UPD_DATE
                , RGS_USER_ID
                , RGS_DATE
            )
            select 
                #{GRP_ID}
                , EVT_ID
                , USE_TY_CD
                , #{UPD_USER_ID}
                , NOW()
                , #{RGS_USER_ID}
                , NOW()
            from CM_EVENT
            where EVT_ID = #{EVT_ID}
        ]]>
    </insert>

    <delete id="delete_cm_grp_evt_bak" parameterType="java.util.HashMap">
        <![CDATA[
            update CM_GRP_EVT set
                USE_TY_CD         = 'D'
                ,UPD_USER_ID     = #{UPD_USER_ID}
                ,UPD_DATE         = NOW()
            where 1 = 1
                and GRP_ID = #{GRP_ID}
                and EVT_ID = #{EVT_ID}
        ]]>
    </delete>
    <delete id="delete_event" parameterType="java.util.HashMap">
        <![CDATA[
            delete from CM_GRP_EVT
            where 
                GRP_ID = #{GRP_ID}
                and EVT_ID = #{EVT_ID}
        ]]>
    </delete>


    <!-- 사용자권한레벨 -->
    <select id="getCM_USER_POPUP" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
            select *
            from
            (
                select
                     A.USER_ID
                    , A.USER_NM_KO
                     , B.CD_NM_KO    AS USE_TY_NM
                from CM_USER A
                    ,(
                        select CD_ID, CD_NM_KO 
                        from CM_TC_CODE 
                        where CD_GRP_ID = 'USE_TY' 
                            and CD_TY = 'C'
                    ) B
                    , CM_GRP_USER C
                where 
                    1 = 1
                    and A.USE_TY_CD = 'Y'
                    and A.USE_TY_CD = B.CD_ID
                    and A.USER_ID NOT IN ( select A.USER_ID 
                                            from CM_GRP_EVT_USER_LVL A, CM_USER B 
                                            where A.USER_ID = B.USER_ID 
                                            and A.GRP_ID = #{GRP_ID} 
                                            and A.EVT_ID = #{EVT_ID}
                                        )
                    and A.USER_ID = C.USER_ID
                    and C.GRP_ID = #{GRP_ID}                                            
        ]]>
                    <if test="USER_NM_KO != null and USER_NM_KO != '' ">
                        and USER_NM_KO LIKE CONCAT('%', #{USER_NM_KO}, '%')
                    </if>
                    <if test="MOBL_NO != null and MOBL_NO != '' ">
                        and MOBL_NO LIKE CONCAT('%', #{MOBL_NO}, '%')
                    </if>
                    <if test="DEPT_NM != null and DEPT_NM != '' ">
                        and DEPT_NM LIKE CONCAT('%', #{DEPT_NM}, '%')
                    </if>
                    <if test="RPSB_WORK != null and RPSB_WORK != '' ">
                        and RPSB_WORK LIKE CONCAT('%', #{RPSB_WORK}, '%')
                    </if>
        <![CDATA[
            )
            order by ${sidx} ${sord}
        ]]>
    </select>
    
    <select id="getCM_GRP_EVT_USER_LVL" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
            select *
            from
            (
                select
                     A.USER_ID
                    , B.USER_NM_KO
                    , A.AUTH_LVL
                     , A.USE_YN as USE_TY
                from CM_GRP_EVT_USER_LVL A, CM_USER B
                where A.USER_ID = B.USER_ID
                    and A.GRP_ID = #{GRP_ID}
                    and A.EVT_ID = #{EVT_ID}
            )
            order by ${sidx} ${sord}
        ]]>
    </select>

    <select id="list_cm_grp_user" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
            select *
            from
            (
                select
                    A.GRP_ID
                    , A.USER_ID
                    , B.USER_NM_KO
                    , A.AUTH_LVL
                     , C.CD_NM_KO    AS USE_TY_NM
                from CM_GRP_USER A, CM_USER B
                    ,(
                        select CD_ID, CD_NM_KO 
                        from CM_TC_CODE 
                        where CD_GRP_ID = 'USE_TY' 
                            and CD_TY = 'C'
                    ) C
                where A.USER_ID = B.USER_ID
                    and A.USE_TY_CD = C.CD_ID
                    and A.GRP_ID = #{GRP_ID}
            )
            order by ${sidx} ${sord}
        ]]>
    </select>

    <insert id="insert_user_acc" parameterType="java.util.HashMap">
        <![CDATA[
            insert into CM_GRP_EVT_USER_LVL
            (
                  GRP_ID
                , EVT_ID
                , USER_ID
                , USE_YN
                , AUTH_LVL
                , UPD_USER_ID
                , UPD_DATE
                , RGS_USER_ID
                , RGS_DATE
            )
            select
                #{GRP_ID}
                , #{EVT_ID}
                , USER_ID
                , USE_TY_CD
                , #{AUTH_LVL}::numeric
                , #{UPD_USER_ID}
                , NOW()
                , #{RGS_USER_ID}
                , NOW()
            from CM_USER
            where 1 = 1 
                and USER_ID = #{USER_ID}
        ]]>
    </insert>

    <update id="update_user_acc" parameterType="java.util.HashMap">
        <![CDATA[
            update CM_GRP_EVT_USER_LVL
            set
                  USE_YN     = #{USE_TY}
                , AUTH_LVL    = #{AUTH_LVL}::numeric
            where 
                GRP_ID = #{GRP_ID}
                and EVT_ID = #{EVT_ID}
                and USER_ID = #{USER_ID}
        ]]>
    </update>

    <delete id="delete_user_acc" parameterType="java.util.HashMap">
        <![CDATA[
            delete from CM_GRP_EVT_USER_LVL
            where 
                GRP_ID = #{GRP_ID}
                and EVT_ID = #{EVT_ID}
                and USER_ID = #{USER_ID}
        ]]>
    </delete>

    <!-- 모바일기기권한레벨 -->
    <select id="getCM_GRP_EVT_MOBL_LVL" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
            select *
            from
            (
                select
                     A.MOBL_ID
                    , B.MOBL_NO
                    , B.USER_NM
                    , B.USER_PSITN_NM
                    , A.AUTH_LVL
                    , D.CD_NM_KO as MOBL_KND_NM
                     , A.PUSH_SEND_TY_CD
                     , A.SMS_SEND_TY_CD
                     , A.USE_YN as USE_TY
                from CM_GRP_EVT_MOBL_LVL A, CM_MOBILE B
                    ,(
                        select CD_ID, CD_NM_KO 
                        from CM_TC_CODE 
                        where CD_GRP_ID = 'MOBL' 
                            and CD_TY = 'C'
                    ) D
                where 
                    A.MOBL_ID = B.MOBL_ID
                    and B.MOBL_KND_CD = D.CD_ID
                    and A.GRP_ID = #{GRP_ID}
                    and A.EVT_ID = #{EVT_ID}
            )
            order by ${sidx} ${sord}
        ]]>
    </select>

    <!-- POPUP -->
    <select id="getCM_GRP_MOBL" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
            select *
            from
            (
                select
                      A.MOBL_ID
                    , A.MOBL_NO
                    , A.USER_NM
                    , A.USER_PSITN_NM
                     , B.CD_NM_KO    AS USE_TY_NM
                from CM_MOBILE A
                    ,(
                        select CD_ID, CD_NM_KO 
                        from CM_TC_CODE 
                        where CD_GRP_ID = 'USE_TY' 
                            and CD_TY = 'C'
                    ) B
                where 1 = 1
                    and A.USE_TY_CD = 'Y'
                    and A.USE_TY_CD = B.CD_ID
                    and A.MOBL_ID NOT IN ( select A.MOBL_ID from CM_GRP_EVT_MOBL_LVL A, CM_MOBILE B where A.MOBL_ID = B.MOBL_ID and A.GRP_ID = #{GRP_ID} and A.EVT_ID = #{EVT_ID})
        ]]>
                    <if test="USER_NM != null and USER_NM != '' ">
                        and USER_NM LIKE CONCAT('%', #{USER_NM}, '%')
                    </if>
                    <if test="USER_PSITN_NM != null and USER_PSITN_NM != '' ">
                        and USER_PSITN_NM LIKE CONCAT('%', #{USER_PSITN_NM}, '%')
                    </if>
                    <if test="MOBL_NO != null and MOBL_NO != '' ">
                        and MOBL_NO LIKE CONCAT('%', #{MOBL_NO}, '%')
                    </if>
        <![CDATA[
            )
            order by ${sidx} ${sord}
        ]]>
    </select>

    <insert id="insert_mobl_acc" parameterType="java.util.HashMap">
        <![CDATA[
            insert into CM_GRP_EVT_MOBL_LVL
            (
                  GRP_ID
                , EVT_ID
                , MOBL_ID
                , USE_YN
                , PUSH_SEND_TY_CD
                , SMS_SEND_TY_CD
                , AUTH_LVL
                , UPD_USER_ID
                , UPD_DATE
                , RGS_USER_ID
                , RGS_DATE
            )
            values
            (
                  #{GRP_ID}
                , #{EVT_ID}
                , #{MOBL_ID}
                , #{USE_TY}
                , #{PUSH_SEND_TY_CD}
                , #{SMS_SEND_TY_CD}
                , #{AUTH_LVL}::numeric
                , #{UPD_USER_ID}
                , NOW()
                , #{RGS_USER_ID}
                , NOW()
            )
        ]]>
    </insert>

    <update id="update_mobl_acc" parameterType="java.util.HashMap">
        <![CDATA[
            update CM_GRP_EVT_MOBL_LVL
            set
                  USE_YN            = #{USE_TY}
                , PUSH_SEND_TY_CD    = #{PUSH_SEND_TY_CD}
                , SMS_SEND_TY_CD    = #{SMS_SEND_TY_CD}
                , AUTH_LVL            = #{AUTH_LVL}::numeric
            where 
                GRP_ID = #{GRP_ID}
                and EVT_ID = #{EVT_ID}
                and MOBL_ID = #{MOBL_ID}
        ]]>
    </update>

    <delete id="delete_mobl_acc" parameterType="java.util.HashMap">
        <![CDATA[
            delete from CM_GRP_EVT_MOBL_LVL
            where 
                GRP_ID = #{GRP_ID}
                and EVT_ID = #{EVT_ID}
                and MOBL_ID = #{MOBL_ID}
        ]]>
    </delete>

    <insert id="insert_user_acc_sel" parameterType="java.util.HashMap" >
        MERGE INTO CM_GRP_EVT_USER_LVL
        USING (
            select COUNT(*) as CNT 
            from CM_GRP_EVT_USER_LVL A,
                 CM_USER B
            where A.USER_ID = B.USER_ID
              and A.GRP_ID = #{GRP_ID}
              and A.EVT_ID = #{EVT_ID}
              and A.USER_ID = #{USER_ID}
              and B.USE_TY_CD = 'Y'
        ) C
        ON (
            C.CNT > 0
        )
        WHEN NOT MATCHED THEN
            INSERT
            ( GRP_ID        , EVT_ID   , USER_ID       , USE_YN  , AUTH_LVL
            , UPD_USER_ID   , UPD_DATE , RGS_USER_ID   , RGS_DATE    )
            values
            ( #{GRP_ID}     , #{EVT_ID}, #{USER_ID}    , 'Y'     , #{AUTH_LVL}::numeric
            , #{UPD_USER_ID}, NOW()  , #{RGS_USER_ID}, NOW()       )
    </insert>


    <!-- 사용자권한레벨 선택추가 팝업쿼리-->
    <select id="getCM_USER_SEL_POPUP" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
            select *
            from
            (
                select
                     A.USER_ID
                    , A.USER_NM_KO
                     , B.CD_NM_KO    AS USE_TY_NM
                from CM_USER A
                    ,(
                        select CD_ID, CD_NM_KO 
                        from CM_TC_CODE 
                        where CD_GRP_ID = 'USE_TY' 
                            and CD_TY = 'C'
                    ) B
                    , CM_GRP_USER C
                where 
                    1 = 1
                    and A.USE_TY_CD = 'Y'
                    and A.USE_TY_CD = B.CD_ID
                    and A.USER_ID = C.USER_ID
                    and C.GRP_ID = #{GRP_ID}                                            
        ]]>
                    <if test="USER_NM_KO != null and USER_NM_KO != '' ">
                        and USER_NM_KO LIKE CONCAT('%', #{USER_NM_KO}, '%')
                    </if>
                    <if test="MOBL_NO != null and MOBL_NO != '' ">
                        and MOBL_NO LIKE CONCAT('%', #{MOBL_NO}, '%')
                    </if>
                    <if test="DEPT_NM != null and DEPT_NM != '' ">
                        and DEPT_NM LIKE CONCAT('%', #{DEPT_NM}, '%')
                    </if>
                    <if test="RPSB_WORK != null and RPSB_WORK != '' ">
                        and RPSB_WORK LIKE CONCAT('%', #{RPSB_WORK}, '%')
                    </if>
        <![CDATA[
            )
            order by ${sidx} ${sord}
        ]]>
    </select>

    <!-- 모바일기기권한레벨 선택추가 팝업쿼리-->
    <select id="getCM_MOBL_SEL_POPUP" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <![CDATA[
            select *
            from
            (
                select
                          A.MOBL_ID
                        , A.MOBL_NO
                        , A.USER_NM
                        , A.USER_PSITN_NM
                        , B.CD_NM_KO    AS USE_TY_NM
                from CM_MOBILE A
                    ,(
                        select CD_ID, CD_NM_KO 
                        from CM_TC_CODE 
                        where CD_GRP_ID = 'USE_TY' 
                            and CD_TY = 'C'
                     ) B
                where 
                    1 = 1
                    and A.USE_TY_CD = 'Y'
                    and A.USE_TY_CD = B.CD_ID
        ]]>
                    <if test="USER_NM != null and USER_NM != '' ">
                        and USER_NM LIKE CONCAT('%', #{USER_NM}, '%')
                    </if>
                    <if test="USER_PSITN_NM != null and USER_PSITN_NM != '' ">
                        and USER_PSITN_NM LIKE CONCAT('%', #{USER_PSITN_NM}, '%')
                    </if>
                    <if test="MOBL_NO != null and MOBL_NO != '' ">
                        and MOBL_NO LIKE CONCAT('%', #{MOBL_NO}, '%')
                    </if>
        <![CDATA[
            )
            order by ${sidx} ${sord}
        ]]>
    </select>

    <!-- 모바일기기권한레벨 입력 선택추가 -->
    <insert id="insert_mobl_acc_sel" parameterType="java.util.HashMap" >
        MERGE INTO CM_GRP_EVT_MOBL_LVL
        USING (
            select COUNT(*) as CNT 
            from CM_GRP_EVT_MOBL_LVL A,
                 CM_MOBILE B
            where A.MOBL_ID = B.MOBL_ID
              and A.GRP_ID = #{GRP_ID}
              and A.EVT_ID = #{EVT_ID}
              and A.MOBL_ID = #{MOBL_ID}
              and B.USE_TY_CD = 'Y'
        ) C
        ON (
            C.CNT > 0
        )
        WHEN NOT MATCHED THEN
            INSERT
             ( GRP_ID            , EVT_ID           , MOBL_ID          , USE_YN
             , PUSH_SEND_TY_CD   , SMS_SEND_TY_CD   , AUTH_LVL
             , UPD_USER_ID       , UPD_DATE         , RGS_USER_ID      , RGS_DATE            )
            values
             ( #{GRP_ID}         , #{EVT_ID}        , #{MOBL_ID}       , 'Y'
             , #{PUSH_SEND_TY_CD}, #{SMS_SEND_TY_CD}, #{AUTH_LVL}::numeric
             , #{UPD_USER_ID}    , NOW()          , #{RGS_USER_ID}   , NOW()            )
    </insert>

</mapper>   
