<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:batch="http://www.springframework.org/schema/batch"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch	 http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!--  ====================== pve 암호화 요청 ===================== -->
	<bean id="pveController" class="kr.co.ucp.pve.controller.PveController"/>
	<bean name="pveJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		  p:jobClass="kr.co.ucp.job.JobPve"
		  p:durability="true">
		<property name="jobDataAsMap">
			<map><entry key="pveController" value-ref="pveController"/></map>
		</property>
	</bean>
	<!-- 시작시 1회만  -->
	<bean id="triggerJobPve1" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="pveJobDetail" />
		<property name="repeatInterval" value="10000000" />
		<property name="repeatCount" value="0" />
		<property name="startDelay" value="3000" />
	</bean>
	<!-- 정기작업 -->
	<bean id="triggerJobPve" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="pveJobDetail" />
		<!-- <property name="cronExpression" value="0 45 0/1 * * ?" /> -->
        <!-- <property name="cronExpression" value="0 23 6 * * ?" /> -->
        <property name="cronExpression" value="0 * * * * ?" /> <!-- 1분마다 -->
	</bean>
	<!--  ====================== pve 암호화 요청 ===================== -->

	<!--  ====================== swip 동기화 ===================== -->
	<bean id="swipController" class="kr.co.ucp.swip.controller.SwipController"/>
	<bean name="swipJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		  p:jobClass="kr.co.ucp.job.JobSwip"
		  p:durability="true">
		<property name="jobDataAsMap">
			<map><entry key="swipController" value-ref="swipController"/></map>
		</property>
	</bean>
	<!-- 시작시 1회만  -->
	<bean id="triggerJobSwip1" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="swipJobDetail" />
		<property name="repeatInterval" value="10000000" />
		<property name="repeatCount" value="0" />
		<property name="startDelay" value="3000" />
	</bean>
	<!-- 정기작업 -->
	<bean id="triggerJobSwip" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="swipJobDetail" />
		<!-- <property name="cronExpression" value="0 45 0/1 * * ?" /> -->
        <property name="cronExpression" value="0 23 6 * * ?" />
	</bean>
	<!--  ====================== swip 동기화 ===================== -->

	<!--  ====================== gis 동기화 ===================== -->
	<bean id="geoController" class="kr.co.ucp.geo.controller.GeoController"/>
	<bean name="geoJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		  p:jobClass="kr.co.ucp.job.JobGeo"
		  p:durability="true">
		<property name="jobDataAsMap">
			<map><entry key="geoController" value-ref="geoController"/></map>
		</property>
	</bean>
	<!-- 시작시 1회만  -->
	<bean id="triggerJobGeo1" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="geoJobDetail" />
		<property name="repeatInterval" value="10000000" />
		<property name="repeatCount" value="0" />
		<property name="startDelay" value="3000" />
	</bean>
	<!-- 정기작업 -->
	<bean id="triggerJobGeo" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="geoJobDetail" />
		<!-- <property name="cronExpression" value="0 45 0/1 * * ?" /> -->
        <property name="cronExpression" value="0 23 6 * * ?" />
	</bean>
	<!--  ====================== gis 동기화 ===================== -->









	<!--  ====================== db 백업 ===================== -->
	<bean id="backupController" class="kr.co.ucp.backup.controller.BackupController"/>
	<bean name="backupJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		  p:jobClass="kr.co.ucp.job.JobBackup"
		  p:durability="true">
		<property name="jobDataAsMap">
			<map><entry key="backupController" value-ref="backupController"/></map>
		</property>
	</bean>
	<!-- 시작시 1회만  -->
	<bean id="triggerJobBackup1" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="backupJobDetail" />
		<property name="repeatInterval" value="10000000" />
		<property name="repeatCount" value="0" />
		<property name="startDelay" value="3000" />
	</bean>
	<!-- 정기작업 -->
	<bean id="triggerJobBackup" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="backupJobDetail" />
		<!-- <property name="cronExpression" value="0 45 0/1 * * ?" /> -->
        <property name="cronExpression" value="0 0 6 * * ?" />
	</bean>
	<!--  ====================== db 백업 ===================== -->

	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
 		<property name="quartzProperties">
				<props><prop key="org.quartz.scheduler.skipUpdateCheck">true</prop></props>
		</property>
		<property name="triggers">
			<list>
			 <!--
				<ref bean="triggerJobSwip"/>
				<ref bean="triggerJobSwip1"/>
				<ref bean="triggerJobGeo"/>
				<ref bean="triggerJobGeo1"/>
				<ref bean="triggerJobPve"/>
				<ref bean="triggerJobPve1"/>
				<ref bean="triggerJobBackup"/>
			  -->
				<ref bean="triggerJobBackup1"/>
			</list>
		</property>
	</bean>

</beans>
